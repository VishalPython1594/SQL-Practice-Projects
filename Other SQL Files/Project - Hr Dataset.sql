CREATE DATABASE ANAPROJ;
USE ANAPROJ;

SELECT * FROM attrition;

SELECT COUNT(*) AS column_count
FROM sys.columns
WHERE object_id = OBJECT_ID('attrition');

SELECT COUNT(ATTRITION) 
FROM attrition
WHERE ATTRITION = 1;

-- Presence of relation between Overtime and Attrition --

SELECT COUNT(OVERTIME), COUNT(ATTRITION)
FROM attrition
WHERE OVERTIME = 1 AND ATTRITION = 1

SELECT COUNT(OVERTIME)
FROM attrition
WHERE OVERTIME = 1

SELECT COUNT(OVERTIME)
FROM attrition
WHERE  ATTRITION = 1

SELECT OVERTIME, COUNT(*) AS TOTAL_EMPLOYEES
FROM attrition
WHERE ATTRITION = 1
GROUP BY OVERTIME;

-- WE CAN SAY THAT THERE IS NO DIRECT RELATION OF OVERTIME WITH THE ATTRITION.



-- LETS ANLYSE PERFORMANCE RATING --

SELECT PERFORMANCERATING, COUNT(ATTRITION) AS TOTAL_EMPLOYEES
FROM ATTRITION
WHERE ATTRITION = 1
GROUP BY PerformanceRating;


-- WE CAN SAY THAT THERE IS A DIRECT RELATION (NEGATIVE) BETWEEN PERFORMANCE RATING AND ATTRITION

-- LETS ANALYSE JOBROLE

SELECT DEPARTMENT, JOBROLE, COUNT(*) AS TOTAL_EMPLOYEES
FROM ATTRITION
WHERE ATTRITION = 1
GROUP BY DEPARTMENT, JOBROLE
ORDER BY  TOTAL_EMPLOYEES DESC;


-- ATTRITION COUNT AS PER THE AGE BUCKETS --

SELECT MAX(AGE), MIN(AGE)
FROM ATTRITION

SELECT  count(case when AGE <= 29 then 1 end) as '18-29',  COUNT(CASE WHEN AGE >29 AND AGE <= 39 THEN 1 END) AS '30-39', 
COUNT(CASE WHEN AGE > 39 AND AGE <= 49 THEN 1 END) AS '40-49', COUNT(CASE WHEN AGE > 49 AND AGE <= 59 THEN 1 END) AS '50-59',
COUNT(CASE WHEN AGE > 59 THEN 1 END) AS '60 AND ABOVE'
FROM ATTRITION
WHERE ATTRITION = 1;


SELECT  case when AGE <= 29 then '18-29'
WHEN AGE >29 AND AGE <= 39 THEN '30-39' 
WHEN AGE > 39 AND AGE <= 49 THEN '40-49' 
WHEN AGE > 49 AND AGE <= 59 THEN '50-59'
ELSE '60 OR ABOVE' 
END AS 'AGE RANGE', COUNT(*) AS ATTRITION_COUNT

FROM ATTRITION
WHERE ATTRITION = 1

GROUP BY case when AGE <= 29 then '18-29'
WHEN AGE >29 AND AGE <= 39 THEN '30-39' 
WHEN AGE > 39 AND AGE <= 49 THEN '40-49' 
WHEN AGE > 49 AND AGE <= 59 THEN '50-59'
ELSE '60 OR ABOVE' 
END

ORDER BY ATTRITION_COUNT DESC;


-- LETS ANALYSE SALARY HIKE --

SELECT * FROM ATTRITION


SELECT PERCENTSALARYHIKE, COUNT(*) AS TOTAL_ATTRITION
FROM ATTRITION
WHERE ATTRITION = 1
GROUP BY PERCENTSALARYHIKE
ORDER BY TOTAL_ATTRITION DESC;



SELECT CASE WHEN PERCENTSALARYHIKE <= 15 THEN '<=15%'
WHEN PERCENTSALARYHIKE > 15 AND PERCENTSALARYHIKE <= 20 THEN '<=20%'
ELSE '>20%'
END AS 'PERCENTAGE HIKE', COUNT(*) AS TOTAL_ATTRITION

FROM ATTRITION
WHERE ATTRITION = 1

GROUP BY CASE WHEN PERCENTSALARYHIKE <= 15 THEN '<=15%'
WHEN PERCENTSALARYHIKE > 15 AND PERCENTSALARYHIKE <= 20 THEN '<=20%'
ELSE '>20%'
END

ORDER BY TOTAL_ATTRITION DESC;


-- THERE IS A NEGATIVE CORRELATION BETWEEN SALARYHIKE AND ATTRITION COUNT --



-- ANALYSING ENVIRONMENT SATISFACTION AND RELATIONSHIP SATISFACTION --

SELECT ENVIRONMENTSATISFACTION, RELATIONSHIPSATISFACTION, COUNT(*) AS TOTAL_ATTRITION
FROM attrition
WHERE Attrition = 1
GROUP BY ENVIRONMENTSATISFACTION, RELATIONSHIPSATISFACTION
ORDER BY TOTAL_ATTRITION DESC;


-- THERE IS NO RELATION BETWEEN THESE TWO COLUMNS WITH THE ATTRITION. IT IS NOT MANDATORY THAT THE PEOPLE WITH LOW RATINGS FOR THESE --
-- SATISFACTIONS TEND TO LEAVE THE COMPANY --


SELECT ENVIRONMENTSATISFACTION, RELATIONSHIPSATISFACTION, COUNT(*) AS TOTAL_ATTRITION
FROM attrition
WHERE Attrition = 1 AND MONTHLYINCOME  < (SELECT AVG(MONTHLYINCOME) FROM ATTRITION)
GROUP BY ENVIRONMENTSATISFACTION, RELATIONSHIPSATISFACTION
ORDER BY TOTAL_ATTRITION DESC;



