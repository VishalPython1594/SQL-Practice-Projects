CREATE DATABASE INVENTORY_TEST;

USE INVENTORY_TEST;

CREATE TABLE PRODUCT
(
PID CHAR(5),
PDESC VARCHAR(40),
PRICE INT
);

CREATE TABLE STOCK
(
PID CHAR(5),
SQTY INT
);

CREATE TABLE ORDERS
(
OID CHAR(5),
CID CHAR(5),
PID CHAR(5),
QTY INT
);

INSERT INTO PRODUCT VALUES ('P0001', 'DELL MOUSE', 550);
INSERT INTO PRODUCT VALUES ('P0002', 'HP WIRELESS KEYBOARD', 950);
INSERT INTO PRODUCT VALUES ('P0003', 'UPS 650VA', 2450);
INSERT INTO PRODUCT VALUES ('P0004', 'SAMSUNG 22" MONITOR', 6500);
INSERT INTO PRODUCT VALUES ('P0005', 'DELL I5 LAPTOP', 35500);


INSERT INTO STOCK VALUES('P0001', 200);
INSERT INTO STOCK VALUES('P0002', 100);
INSERT INTO STOCK VALUES('P0003', 100);
INSERT INTO STOCK VALUES('P0004', 50);
INSERT INTO STOCK VALUES('P0005', 50);

INSERT INTO ORDERS VALUES('O0006', 'C0003', 'P0004', 15);


SELECT * FROM PRODUCT;
SELECT * FROM STOCK;
SELECT * FROM ORDERS;


----------------------------------------------------- FINAL INSERT TRIGGER -------------------------------------------------


CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	
	DECLARE @QR AS INT
	DECLARE @QS AS INT

	SET @QR = (SELECT QTY FROM INSERTED WHERE PID = (SELECT PID FROM INSERTED));
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));

	IF @QS >= @QR
	BEGIN
		
		UPDATE STOCK
		SET SQTY = SQTY - @QR
		WHERE PID = (SELECT PID FROM INSERTED)
		PRINT('ORDER ACCEPTED');

	END;

	ELSE
	BEGIN
		
		ROLLBACK;
		PRINT('INSUFFICIENT QUANTITY - ORDER REJECTED');

	END;

END;

INSERT INTO ORDERS VALUES('O0001', 'C0003', 'P0004', 15);

INSERT INTO ORDERS VALUES('O0002', 'C0001', 'P0001', 50);

INSERT INTO ORDERS VALUES('O0004', 'C0002', 'P0004', 65);

UPDATE ORDERS
SET QTY = 60
WHERE OID = 'O0002';



----------------------------------------------------- FINAL UPDATE TRIGGER -------------------------------------------------



CREATE TRIGGER TR_UPD_STK
ON ORDERS
FOR UPDATE
AS
BEGIN	
	
	DECLARE @OQ AS INT
	DECLARE @NQ AS INT
	DECLARE @CQ AS INT
	DECLARE @DIF AS INT
	
	SET @OQ = (SELECT QTY FROM DELETED WHERE PID = (SELECT PID FROM DELETED));
	SET @NQ = (SELECT QTY FROM INSERTED WHERE PID = (SELECT PID FROM INSERTED));
	SET @CQ = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
	SET @DIF = @NQ - @OQ;

	IF @CQ >= @DIF
	BEGIN
		
		UPDATE STOCK
		SET SQTY = @CQ - @DIF
		WHERE PID = (SELECT PID FROM INSERTED)
		PRINT('QUANTITY UPDATED SUCCESSFULLY');

	END;

	ELSE
	BEGIN
		
		ROLLBACK;
		PRINT('UNABLE TO UPDATE - INSUFFICIENT BALANCE');
	END;

END;



INSERT INTO ORDERS VALUES('O0005', 'C0004', 'P0003', 30);

UPDATE ORDERS
SET QTY = 50
WHERE OID = 'O0005';

SELECT * FROM STOCK;
SELECT * FROM ORDERS;

UPDATE ORDERS
SET QTY = 40
WHERE OID = 'O0001';